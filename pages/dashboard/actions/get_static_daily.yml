id: '16967551444070.5308042359985143'
name: get_static_daily
nameConfigured: true
steps:
  - id: '16967551486090.3333294539439351'
    type: customSQLQuery
    name: query
    params:
      - type: query
        value: >
          SELECT  
              COUNT(store_transaction_tab.cafe_id) AS sum_cus, 
              SUM(store_transaction_tab.number_of_pc) as pc,
              MONTH(store_transaction_tab.end_date) as end_month,
              YEAR(store_transaction_tab.end_date) as end_year,
              MONTH(store_transaction_tab.start_date) as start_month,
              YEAR(store_transaction_tab.start_date) as start_year,
              MONTH(store_transaction_tab.purchase_time) as purchase_month,
              YEAR(store_transaction_tab.purchase_time) as purchase_year
          FROM store_transaction_tab

          INNER JOIN (
              SELECT cafe_id, MAX(end_date) as max_end_date
              FROM store_transaction_tab
              GROUP BY cafe_id
          ) latest_purchase

          ON store_transaction_tab.cafe_id = latest_purchase.cafe_id AND
          store_transaction_tab.end_date = latest_purchase.max_end_date

          LEFT JOIN cafe_cafe_tab 

          ON cafe_cafe_tab.id = store_transaction_tab.cafe_id

          AND cafe_cafe_tab.country_id = 84

          AND cafe_cafe_tab.currentstatus = 3

          WHERE DATE(store_transaction_tab.end_date) > NOW() 

          AND store_transaction_tab.package_id IN (SELECT package_id FROM
          product_package_item_tab WHERE item_id = 4)

          GROUP BY end_month, end_year, start_month, start_year, purchase_month,
          purchase_year
        valueType: interpolatedValue
        interpolationType: string
      - type: datasourceId
        value: GCMS-SING-VIAProxy
        valueType: custom
        mustSelectFirst: true
      - type: preparedQuery
        value: >
          SELECT  
              COUNT(store_transaction_tab.cafe_id) AS sum_cus, 
              SUM(store_transaction_tab.number_of_pc) as pc,
              MONTH(store_transaction_tab.end_date) as end_month,
              YEAR(store_transaction_tab.end_date) as end_year,
              MONTH(store_transaction_tab.start_date) as start_month,
              YEAR(store_transaction_tab.start_date) as start_year,
              MONTH(store_transaction_tab.purchase_time) as purchase_month,
              YEAR(store_transaction_tab.purchase_time) as purchase_year
          FROM store_transaction_tab

          INNER JOIN (
              SELECT cafe_id, MAX(end_date) as max_end_date
              FROM store_transaction_tab
              GROUP BY cafe_id
          ) latest_purchase

          ON store_transaction_tab.cafe_id = latest_purchase.cafe_id AND
          store_transaction_tab.end_date = latest_purchase.max_end_date

          LEFT JOIN cafe_cafe_tab 

          ON cafe_cafe_tab.id = store_transaction_tab.cafe_id

          AND cafe_cafe_tab.country_id = 84

          AND cafe_cafe_tab.currentstatus = 3

          WHERE DATE(store_transaction_tab.end_date) > NOW() 

          AND store_transaction_tab.package_id IN (SELECT package_id FROM
          product_package_item_tab WHERE item_id = 4)

          GROUP BY end_month, end_year, start_month, start_year, purchase_month,
          purchase_year
        valueType: interpolatedValue
      - type: preparedQueryParams
        value: []
        valueType: custom
      - type: customDatabaseName
        value: ''
        valueType: interpolatedValue
      - type: stepVersion
        value: 2
        valueType: custom
      - type: successMapper
        value: ''
        valueType: interpolatedValue
      - type: failureMapper
        value: ''
        valueType: interpolatedValue
      - type: mapperEnabled
        value: false
        valueType: custom
    level: 0
    fallthroughError: false
    isChanged: true
singleStep: false
mode: auto
modeConfigured: true
parentPageId: '16965916834120.3856361333602476'
folder: false
parentId: null
config:
  shouldConfirm: false
  confirmMessage: Are you sure you'd like to proceed with "{{actions.get_static_daily.name}}"?
  showSuccessToast: false
  successToast: Action "{{actions.get_static_daily.name}}" successfully executed
  successToastDuration: '3000'
  successToastHideByClick: false
  showErrorToast: true
  errorToast: Action "{{actions.get_static_daily.name}}" has failed
  errorToastDuration: '3000'
  errorToastHideByClick: false
  delay: '0'
  runWhenFirstReferenced: true
  preserveStateOnPageChange: false
assigned: false
selected: true
configured: true
index: 11
